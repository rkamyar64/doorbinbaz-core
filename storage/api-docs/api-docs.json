{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API documentation for the application",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.doorbinbaz.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products with pagination and filters",
                "description": "Retrieve a paginated list of products with optional filtering by search, sku, name, and slug",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter products by name, description, sku, or other fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Exact SKU to filter products",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Product name to filter (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "Product slug to filter (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "first_page_url": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "last_page_url": {
                                                    "type": "string"
                                                },
                                                "next_page_url": {
                                                    "type": "string"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "stats": {
                                            "properties": {
                                                "total_products": {
                                                    "description": "Total number of products in database",
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "in_stock_products": {
                                                    "description": "Number of products in stock",
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "out_of_stock_products": {
                                                    "description": "Number of products out of stock",
                                                    "type": "integer",
                                                    "example": 30
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "filters": {
                                            "description": "Available filter parameters",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "search",
                                                "sku",
                                                "name",
                                                "slug"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return user data with authentication token",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Accept header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Content-Type header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "family",
                                    "email",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "family": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user created"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John"
                                                        },
                                                        "family": {
                                                            "type": "string",
                                                            "example": "Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123def456..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return user data with authentication token",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Accept header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Content-Type header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "family": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "2|def456ghi789..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Revoke the current user's access token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Accept header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Content-Type header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token for authentication",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user log out"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Retrieve the currently authenticated user's information",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Accept header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Content-Type header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token for authentication",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "family": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.doe@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "email_verified_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/businesses/show": {
            "get": {
                "tags": [
                    "Businesses"
                ],
                "summary": "Get all businesses",
                "description": "Retrieve a list of all businesses with optional search functionality",
                "operationId": "7ba25a0be54f91a1070751fe8360ae47",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term to filter businesses by name, family, business_name, mobile, or national_id",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Businesses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Businesses retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving businesses"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/businesses/store": {
            "post": {
                "tags": [
                    "Businesses"
                ],
                "summary": "Create a new business",
                "description": "Create a new business record",
                "operationId": "dfb8caaada5a900a00e129acad036344",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "family",
                                    "business_name",
                                    "address",
                                    "mobile"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "First name of the business owner",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "family": {
                                        "description": "Last name of the business owner",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "business_name": {
                                        "description": "Name of the business",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John's Electronics Store"
                                    },
                                    "address": {
                                        "description": "Business address",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "123 Main Street, City, State"
                                    },
                                    "mobile": {
                                        "description": "Mobile phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1234567890"
                                    },
                                    "tell": {
                                        "description": "Telephone number (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1987654321"
                                    },
                                    "zipcode": {
                                        "description": "ZIP/postal code (optional)",
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "12345"
                                    },
                                    "national_id": {
                                        "description": "National ID number (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating business"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/businesses/{business}": {
            "post": {
                "tags": [
                    "Businesses"
                ],
                "summary": "Update an existing business",
                "description": "Update a specific business record",
                "operationId": "dbb8c3cdcf4805c61352e22c13294bc7",
                "parameters": [
                    {
                        "name": "business",
                        "in": "path",
                        "description": "Business ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "family",
                                    "business_name",
                                    "address",
                                    "mobile"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "First name of the business owner",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "family": {
                                        "description": "Last name of the business owner",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "business_name": {
                                        "description": "Name of the business",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John's Electronics Store"
                                    },
                                    "address": {
                                        "description": "Business address",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "123 Main Street, City, State"
                                    },
                                    "mobile": {
                                        "description": "Mobile phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1234567890"
                                    },
                                    "tell": {
                                        "description": "Telephone number (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1987654321"
                                    },
                                    "zipcode": {
                                        "description": "ZIP/postal code (optional)",
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "12345"
                                    },
                                    "national_id": {
                                        "description": "National ID number (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating business"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/show": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders for authenticated user",
                "description": "Retrieve all orders belonging to the authenticated store user with optional search functionality",
                "operationId": "getOrders",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term to filter orders by description, status, prices, service users, or business details",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "orders retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "store_user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "business_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "service_user_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "services": {
                                                        "type": "string",
                                                        "example": "Service details"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Order description"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "full_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1000
                                                    },
                                                    "fee_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 100
                                                    },
                                                    "profit_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 50
                                                    },
                                                    "discount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-01T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-01T12:00:00Z"
                                                    },
                                                    "storeUser": {
                                                        "type": "object"
                                                    },
                                                    "serviceUsers": {
                                                        "type": "object"
                                                    },
                                                    "businessId": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving orders"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/store": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "description": "Create a new order for the authenticated store user",
                "operationId": "createOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_id"
                                ],
                                "properties": {
                                    "business_id": {
                                        "description": "Business ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_user_id": {
                                        "description": "Service user ID",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "services": {
                                        "description": "Services provided",
                                        "type": "string",
                                        "example": "Haircut and styling"
                                    },
                                    "description": {
                                        "description": "Order description",
                                        "type": "string",
                                        "example": "Regular haircut with styling"
                                    },
                                    "status": {
                                        "description": "Order status (pending, completed, cancelled, etc.)",
                                        "type": "string",
                                        "example": "pending"
                                    },
                                    "full_price": {
                                        "description": "Full price of the order",
                                        "type": "integer",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "fee_price": {
                                        "description": "Fee price",
                                        "type": "integer",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "profit_price": {
                                        "description": "Profit price",
                                        "type": "integer",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "discount": {
                                        "description": "Discount amount",
                                        "type": "integer",
                                        "format": "float",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{orders}": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an existing order",
                "description": "Update an existing order by ID",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "orders",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "description": "Business ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_user_id": {
                                        "description": "Service user ID",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "services": {
                                        "description": "Services provided",
                                        "type": "string",
                                        "example": "Haircut and styling"
                                    },
                                    "description": {
                                        "description": "Order description",
                                        "type": "string",
                                        "example": "Regular haircut with styling"
                                    },
                                    "status": {
                                        "description": "Order status",
                                        "type": "string",
                                        "example": "completed"
                                    },
                                    "full_price": {
                                        "description": "Full price of the order",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "fee_price": {
                                        "description": "Fee price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "profit_price": {
                                        "description": "Profit price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "discount": {
                                        "description": "Discount amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/show": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get list of services",
                "description": "Retrieve a paginated list of services with optional search functionality",
                "operationId": "getServices",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term to filter services by name, family, business_name, mobile, or national_id",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Web Development"
                                                    },
                                                    "family": {
                                                        "type": "string",
                                                        "example": "Technology"
                                                    },
                                                    "business_name": {
                                                        "type": "string",
                                                        "example": "Tech Solutions Ltd"
                                                    },
                                                    "mobile": {
                                                        "type": "string",
                                                        "example": "+1234567890"
                                                    },
                                                    "national_id": {
                                                        "type": "string",
                                                        "example": "123456789"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 99.99
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Professional web development services"
                                                    },
                                                    "store_user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-01T00:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-01T00:00:00.000000Z"
                                                    },
                                                    "store_user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving Service"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/store": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Create a new service with the provided data",
                "operationId": "createService",
                "requestBody": {
                    "description": "Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Service name (must be unique)",
                                        "type": "string",
                                        "example": "Web Development"
                                    },
                                    "family": {
                                        "description": "Service category/family",
                                        "type": "string",
                                        "example": "Technology"
                                    },
                                    "business_name": {
                                        "description": "Business name",
                                        "type": "string",
                                        "example": "Tech Solutions Ltd"
                                    },
                                    "mobile": {
                                        "description": "Contact mobile number",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "national_id": {
                                        "description": "National ID",
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Professional web development services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Web Development"
                                                },
                                                "family": {
                                                    "type": "string",
                                                    "example": "Technology"
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "Tech Solutions Ltd"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "national_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 99.99
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Professional web development services"
                                                },
                                                "store_user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "store_user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Please enter your service name."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating Service"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Database connection failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/{service}": {
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update an existing service",
                "description": "Update a service with the provided data",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Advanced Web Development"
                                    },
                                    "family": {
                                        "description": "Service category/family",
                                        "type": "string",
                                        "example": "Technology"
                                    },
                                    "business_name": {
                                        "description": "Business name",
                                        "type": "string",
                                        "example": "Tech Solutions Ltd"
                                    },
                                    "mobile": {
                                        "description": "Contact mobile number",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "national_id": {
                                        "description": "National ID",
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 149.99
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Advanced professional web development services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Advanced Web Development"
                                                },
                                                "family": {
                                                    "type": "string",
                                                    "example": "Technology"
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "Tech Solutions Ltd"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "national_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 149.99
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Advanced professional web development services"
                                                },
                                                "store_user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                },
                                                "store_user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This name is already registered."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating Service"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Database connection failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Services"
                ],
                "summary": "Partially update an existing service",
                "description": "Partially update a service with the provided data",
                "operationId": "partialUpdateService",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service data to update (partial)",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Advanced Web Development"
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 149.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Advanced Web Development"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 149.99
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Services",
            "description": "Service management endpoints"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Businesses",
            "description": "Businesses"
        },
        {
            "name": "Orders",
            "description": "Orders"
        }
    ]
}